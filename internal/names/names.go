package names

import (
	"crypto/sha256"
	"encoding/binary"
	"math/rand"
)

// these lists of names and adjectives are (partly) copied from:
// https://github.com/moby/moby/tree/master/pkg/namesgenerator
// https://github.com/fcrespo82/ubuntu-name-generator/tree/master/src/app
var (
	left = [...]string{
		"able",
		"admiring",
		"adventurous",
		"adoring",
		"affectionate",
		"agitated",
		"amazing",
		"angry",
		"awesome",

		"beautiful",
		"blissful",
		"bold",
		"brave",
		"brilliant",
		"busy",

		"charming",
		"clever",
		"cool",
		"compassionate",
		"competent",
		"condescending",
		"confident",
		"crafty",
		"cranky",

		"dangerous",
		"daunting",
		"dazzling",
		"determined",
		"distracted",
		"dreamy",
		"dutiful",

		"eager",
		"ecstatic",
		"elated",
		"elegant",
		"eloquent",
		"epic",
		"exciting",

		"fantastic",
		"festive",
		"flying",
		"focused",
		"friendly",
		"frosty",
		"funky",
		"funny",

		"gallant",
		"gifted",
		"giggling",
		"goofy",
		"gracious",
		"great",
		"grinning",
		"grumpy",

		"happy",
		"helpful",
		"hilarious",
		"hopeful",
		"hungry",
		"hyperactive",

		"illustrious",
		"impressive",
		"incredible",
		"infallible",
		"ingenious",
		"inspiring",
		"intelligent",
		"interesting",
		"iridescent",

		"jazzy",
		"jittery",
		"jolly",
		"jovial",
		"juggling",

		"keen",
		"kind",

		"laughing",
		"leaping",
		"lovely",
		"loving",
		"lucid",

		"magical",
		"majestic",
		"marvelous",
		"mellow",
		"merry",
		"mighty",
		"mystifying",
		"modest",
		"musical",
		"mystical",

		"nerdy",
		"nervous",
		"nice",
		"nimble",
		"nifty",
		"nostalgic",

		"obnoxious",
		"objective",
		"observing",
		"odd",
		"opportunistic",
		"optimistic",

		"peaceful",
		"peachy",
		"pedantic",
		"pensive",
		"philosophical",
		"photogenic",
		"poetic",
		"practical",
		"pragmatic",
		"predictive",
		"pretty",
		"priceless",
		"prickly",
		"pristine",
		"proud",

		"quick",
		"quiet",
		"quirky",
		"quizzical",

		"radical",
		"rational",
		"reasonable",
		"rebellious",
		"relaxed",
		"reverent",
		"romantic",
		"rowdy",

		"serene",
		"sharp",
		"silly",
		"sleepy",
		"smooth",
		"spectacular",
		"spunky",
		"stoic",
		"strange",
		"stressed",
		"suspicious",
		"sweet",

		"temperamental",
		"tender",
		"thirsty",
		"thoughtful",
		"ticklish",
		"tiny",
		"tough",
		"triumphant",
		"trusting",
		"trustworthy",
		"twirling",

		"unbelievable",
		"understanding",
		"unruffled",
		"unruly",
		"untamed",
		"upbeat",

		"veracious",
		"vibrant",
		"vigilant",
		"vigorous",

		"wandering",
		"wild",
		"witty",
		"wizardly",
		"wonderful",

		"yodeling",
		"youthful",

		"zealous",
		"zen",
		"zooming",
	}

	right = [...]string{
		"aal",
		"albatross",
		"alligator",
		"alpaca",
		"amoeba",
		"anemone",
		"angelfish",
		"ant",
		"anteater",
		"antelope",
		"ape",
		"arachnid",
		"armadillo",
		"axolotl",

		"baboon",
		"badger",
		"barnacle",
		"barracuda",
		"bat",
		"beagle",
		"bear",
		"beaver",
		"bee",
		"beetle",
		"bison",
		"blackbird",
		"blowfish",
		"bobcat",
		"bonobo",
		"bull",
		"bunny",

		"camel",
		"capybara",
		"cardinal",
		"caribou",
		"cat",
		"caterpillar",
		"chameleon",
		"cheetah",
		"chickadee",
		"chicken",
		"chinchilla",
		"chipmunk",
		"chupacabra",
		"cobra",
		"condor",
		"cow",
		"coyote",
		"crab",
		"crane",
		"crocodile",
		"crow",

		"deer",
		"dodo",
		"dog",
		"dolphin",
		"donkey",
		"dove",
		"duck",

		"eagle",
		"earthworm",
		"eel",
		"elephant",
		"elk",
		"emu",
		"escargot",

		"falcon",
		"fawn",
		"fennec",
		"ferret",
		"firefly",
		"fish",
		"flamingo",
		"fly",
		"fox",
		"frog",

		"gazelle",
		"gecko",
		"gerbil",
		"gibbon",
		"giraffe",
		"gnat",
		"gnu",
		"goat",
		"goose",
		"gopher",
		"gorilla",
		"groundhog",
		"gull",
		"guppy",

		"hamster",
		"hare",
		"hawk",
		"hedgehog",
		"hen",
		"hornet",
		"horse",
		"hummingbird",
		"husky",
		"hyena",

		"ibex",
		"iguana",
		"impala",

		"jackal",
		"jaguar",
		"jay",
		"jaybird",
		"jellyfish",
		"junebug",

		"kangaroo",
		"kingfisher",
		"kitten",
		"kiwi",
		"koala",
		"koi",
		"kolibri",
		"kookaburra",
		"kouprey",
		"kowari",
		"kudu",

		"labrador",
		"ladybug",
		"lamb",
		"lemming",
		"lemur",
		"leopard",
		"lion",
		"lizard",
		"llama",
		"lobster",
		"lynx",

		"macaque",
		"macaw",
		"magpie",
		"mallard",
		"mammoth",
		"manatee",
		"manta",
		"mantis",
		"marmot",
		"meerkat",
		"mink",
		"mockingbird",
		"mole",
		"monkey",
		"moose",
		"mouse",
		"mule",

		"narwhal",
		"nightingale",
		"nightjar",
		"nutria",

		"ocelot",
		"octopus",
		"okapi",
		"opossum",
		"orangutan",
		"orca",
		"ostrich",
		"otter",
		"owl",
		"ox",
		"oyster",

		"panda",
		"pangolin",
		"panther",
		"parakeet",
		"parrot",
		"peafowl",
		"peccary",
		"pelican",
		"penguin",
		"pheasant",
		"pig",
		"pigeon",
		"piglet",
		"piranha",
		"platypus",
		"polecat",
		"porcupine",
		"possum",
		"primate",
		"pronghorn",
		"protozoa",
		"puffin",
		"puma",
		"python",

		"quokka",

		"rabbit",
		"raccoon",
		"rattlesnake",
		"raven",
		"reindeer",
		"rhea",
		"rhino",
		"roadrunner",
		"rooster",

		"salamander",
		"salmon",
		"scallop",
		"scorpion",
		"seagull",
		"seahorse",
		"seal",
		"shark",
		"sheep",
		"sloth",
		"snail",
		"snake",
		"sparrow",
		"spider",
		"squid",
		"squirrel",
		"starfish",
		"stingray",
		"swallow",
		"swan",
		"swordfish",

		"tapir",
		"tarantula",
		"tiger",
		"toad",
		"tortoise",
		"toucan",
		"trout",
		"turkey",
		"turtle",

		"urchin",

		"viper",
		"vulture",

		"wallaby",
		"walrus",
		"wasp",
		"weasel",
		"whale",
		"wolf",
		"wolverine",
		"wombat",
		"woodchuck",
		"worm",

		"zebra",
	}
)

// GetDeterministicName generates a name from the list of adjectives and
// surnames from Docker's namesgenerator package, formatted as
// "adjective_surname". For example 'focused_turing'.
// The name is chosen deterministically based on the specified seed.
func GetDeterministicName(seedValue []byte) string {
	hash := sha256.New()
	hash.Write(seedValue)
	source := rand.NewSource(int64(binary.BigEndian.Uint64(hash.Sum(nil))))
	r := rand.New(source)
	return left[r.Intn(len(left))] + "_" + right[r.Intn(len(right))]
}
