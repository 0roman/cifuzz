==8210==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x000100081550 bp 0x00016fd8a350 sp 0x00016fd8a300 T0)
  ==8210==The signal is caused by a WRITE memory access.
  ==8210==Hint: address points to the zero page.
      #0 0x100081550 in segmentation(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>) /testdata/segmentation-fault/segmentation_fault.cpp:6:12
      #1 0x100076ecc in LLVMFuzzerTestOneInputNoReturn(unsigned char const*, unsigned long) /testdata/segmentation-fault/segmentation_fault_fuzztest.cpp:12:5
      #2 0x100076ce4 in LLVMFuzzerTestOneInput /testdata/segmentation-fault/segmentation_fault_fuzztest.cpp:9:1
      #3 0x100098f3c in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /tmp/llvm-20230115-15744-5hwhtr/llvm-project-15.0.7.src/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:612:13
      #4 0x100098830 in fuzzer::Fuzzer::RunOne(unsigned char const*, unsigned long, bool, fuzzer::InputInfo*, bool, bool*) /tmp/llvm-20230115-15744-5hwhtr/llvm-project-15.0.7.src/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:514:7
      #5 0x10009a69c in fuzzer::Fuzzer::ReadAndExecuteSeedCorpora(std::__1::vector<fuzzer::SizedFile, std::__1::allocator<fuzzer::SizedFile>>&) /tmp/llvm-20230115-15744-5hwhtr/llvm-project-15.0.7.src/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:827:7
      #6 0x10009a8dc in fuzzer::Fuzzer::Loop(std::__1::vector<fuzzer::SizedFile, std::__1::allocator<fuzzer::SizedFile>>&) /tmp/llvm-20230115-15744-5hwhtr/llvm-project-15.0.7.src/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:865:3
      #7 0x10008a234 in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /tmp/llvm-20230115-15744-5hwhtr/llvm-project-15.0.7.src/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:912:6
      #8 0x1000b5a60 in main /tmp/llvm-20230115-15744-5hwhtr/llvm-project-15.0.7.src/compiler-rt/lib/fuzzer/FuzzerMain.cpp:20:10
      #9 0x1811e3e4c  (<unknown module>)
      #10 0xae407ffffffffffc  (<unknown module>)

  ==8210==Register values:
   x[0] = 0x000000016fd8a218   x[1] = 0x0000000000000000   x[2] = 0x0000000000000000   x[3] = 0x0000000000000006
   x[4] = 0x0000000000000007   x[5] = 0x0000000000000002   x[6] = 0x000000016f590000   x[7] = 0x0000000000000001
   x[8] = 0x0000000000000001   x[9] = 0x0000000000000000  x[10] = 0x00000000001889a0  x[11] = 0x0000000000000064
  x[12] = 0x00000001001e0000  x[13] = 0x519671dcec326939  x[14] = 0x0000000000000000  x[15] = 0x0000000000000000
  x[16] = 0x0000000000000049  x[17] = 0x00000001e18fb5d0  x[18] = 0x0000000000000000  x[19] = 0x000000016fd8a420
  x[20] = 0x0000000102c00c90  x[21] = 0x0000000000000007  x[22] = 0x0000000102c00cb0  x[23] = 0x00000001000c8c00
  x[24] = 0x00000001000c8a00  x[25] = 0x00000001000c8938  x[26] = 0x00000001000c8940  x[27] = 0x00000001000c8000
  x[28] = 0x00000000000000ff     fp = 0x000000016fd8a350     lr = 0x00000001000814e8     sp = 0x000000016fd8a300
  AddressSanitizer can not provide additional info.
  SUMMARY: AddressSanitizer: SEGV /testdata/segmentation-fault/segmentation_fault.cpp:6:12 in segmentation(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>)
