name: Tests and Linting

on:
  merge_group:
  pull_request:
    branches: [main]
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  linting:
    name: lint
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v3

      - name: Setup Go environment
        uses: actions/setup-go@v3
        with:
          go-version: "^1.19"

      - name: Check file formatting
        run: make fmt/check

      - name: Check go mod tidy
        run: make tidy/check

      - name: Restore golangci-lint files from cache
        uses: actions/cache/restore@v3
        with:
          key: ${{ runner.os }}-golangci-lint
          path: /home/runner/.cache/golangci-lint

      - name: Run linting check
        run: make lint

      - name: Save golangci-lint files to cache
        uses: actions/cache/save@v3
        with:
          key: ${{ runner.os }}-golangci-lint
          path: /home/runner/.cache/golangci-lint

  unit_tests:
    name: unit tests (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04, macos-12, windows-2022]
    steps:
      - uses: actions/checkout@v3

      - name: Setup Go environment
        uses: actions/setup-go@v3
        with:
          go-version: "^1.19"

      - name: Run unit tests
        run: make test/unit

  integration_tests:
    name: integration tests (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # testing on ubuntu-20.04 is necessary
        # testing on ubuntu-latest is for ensuring compatibility with current version
        # we have to use macos-12 as after upgrading the external
        # action for llvm setup as it seems that this is breaking
        # with macos-11
        os: [ubuntu-20.04, ubuntu-latest, macos-12, windows-2022]
    steps:
      - uses: actions/checkout@v3

      - name: Setup VM for cifuzz
        uses: ./.github/actions/vm_setup
        with:
          os: ${{ matrix.os }}

      - name: Run integration tests
        if: contains(matrix.os, 'ubuntu') || contains(matrix.os, 'mac')
        # We run the integration tests sequentially here to avoid that
        # tests write to stderr at the same time, which makes it hard to
        # figure out which output belongs to which test.
        run: make test/integration/sequential
        shell: bash

      - name: Run integration tests
        if: contains(matrix.os, 'windows')
        # We allow a maximum of 2 attempts in order to give flaky tests a
        # better chance to pass.
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 15
          max_attempts: 2
          # We run the integration tests sequentially here to avoid that
          # tests write to stderr at the same time, which makes it hard to
          # figure out which output belongs to which test.
          command: make test/integration/sequential
          shell: bash

  prerelease_tests:
    name: test with CIFUZZ_PRERELEASE (ubuntu-latest)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup VM for cifuzz
        uses: ./.github/actions/vm_setup
        with:
          os: ubuntu-latest

      - name: Set prerelease flag
        run: echo "CIFUZZ_PRERELEASE=true" >> $GITHUB_ENV

      - name: Run unit tests
        run: make test/unit
        shell: bash

      - name: Run integration tests
        run: make test/integration
        shell: bash
